     1                                  ;===============================================================================
     2                                  ; > check_password
     3                                  ;===============================================================================
     4                                  
     5                                              global  check_password
     6                                              extern  get_string
     7                                  
     8                                              section .text
     9                                  
    10                                  ;###############################################################################
    11                                  ;# Checks user password
    12                                  ;# ENTRY: RDI <- user password addr
    13                                  ;#        RSI <- user password length
    14                                  ;# EXIT:  RAX -> 0 if password is correct
    15                                  ;#               1 if password is incorrect
    16                                  ;# DESTR: RDI RSI RDX
    17                                  ;###############################################################################
    18                                  
    19                                  check_password:
    20                                  
    21 00000000 55                                  push    rbp
    22 00000001 4889E5                              mov     rbp, rsp
    23 00000004 4883EC1A                            sub     rsp, BUFFER_SIZE + 16
    24                                  
    25 00000008 488965F8                            mov     qword [rbp - 8], rsp
    26                                  
    27 0000000C 48897DF0                            mov     qword [rbp - 16], rdi
    28                                  
    29 00000010 4889E6                              mov     rsi, rsp
    30 00000013 E8(00000000)                        call    get_string
    31                                  
    32 00000018 483165F8                            xor     qword [rbp - 8], rsp
    33 0000001C 7506                                jne     .stack_smashed
    34                                  
    35 0000001E 4883C41A                            add     rsp, BUFFER_SIZE + 16
    36 00000022 5D                                  pop     rbp
    37 00000023 C3                                  ret
    38                                  
    39                                              ;mov     rcx, BUFFER_SIZE
    40                                              ;mov     rdi, qword [rbp - 16]
    41                                  
    42                                              ;repne   cmpsb
    43                                  
    44                                                          
    45                                  
    46                                  
    47                                  .stack_smashed:
    48                                  
    49 00000024 B83C000000                          mov     rax, 60
    50 00000029 BF39050000                          mov     rdi, 1337
    51 0000002E 0F05                                syscall
    52                                              
    53                                  
    54                                  ;-------------------------------------------------------------------------------
    55                                  
    56                                              section .data
    57                                  
    58                                  BUFFER_SIZE equ 10
    59                                  CANARY_VALUE equ 0x123abc
    60                                  
    61                                  ;###############################################################################
    62                                  
