     1                                  ;;=========================================================================
     2                                  ;; put_u_base.asm                                       Shishqa, MIPT 2020
     3                                  ;;=========================================================================
     4                                  
     5                                              global  _put_u_base
     6                                  
     7                                              extern  _itoa
     8                                              extern  _put_s
     9                                  
    10                                              section .text
    11                                  
    12                                  ;;=========================================================================
    13                                  ;; Writes unsigned int number in base representation to console
    14                                  ;;
    15                                  ;; ENTRY: ESI <- int number to print
    16                                  ;;         DH <- binary degree if base is binary / 0 if not
    17                                  ;;         DL <- base (<= 16)
    18                                  ;; DESTR: RAX RBX RDX RSI RDI ; DF
    19                                  ;;=========================================================================
    20                                  
    21                                  _put_u_base:
    22                                  
    23 00000000 488D3C25[1F000000]                  lea     rdi, [IntBuffer + (IntBufSize - 2)] ; RDI -> where number
    24 00000008 E8(00000000)                        call    _itoa                               ; will end.
    25                                                                                          ; convert num to str
    26                                  
    27 0000000D 4889FE                              mov     rsi, rdi
    28 00000010 E8(00000000)                        call    _put_s                              ; print converted num
    29                                  
    30 00000015 C3                                  ret
    31                                  
    32                                  ;;-------------------------------------------------------------------------
    33                                  
    34                                              section .data
    35                                  
    36                                  IntBufSize  equ 33
    37                                  
    38 00000000 00<rept>                IntBuffer:  times IntBufSize db 0
    39                                  
    40                                  ;;=========================================================================
    41                                  
    42                                  
    43                                  
    44                                  
    45                                  
    46                                  
    47                                  
    48                                  
    49                                  
    50                                  
    51                                  
