Turbo Assembler	 Version 4.1	    02/17/20 09:09:30	    Page 1
03_vramf.asm



      1	0000			     .model tiny
      2
      3	      =B800		     videosegment = 0b800h
      4
      5	0000			     .code
      6
      7				     org 100h
      8
      9	0100  B8 B800		     Start:	     mov ax, videosegment
     10	0103  8E C0				     mov es, ax			     ; set segment to videoRAM
     11
     12	0105  B8 0000				     mov ax, 0
     13	0108  B6 20				     mov dh, 32d
     14	010A  B2 70				     mov dl, 70h		     ; black on	white
     15
     16	010C  E8 0075		     DrawBG:	     call DrawHorLine		     ; DrawHorLine(ax, ' ', white)
     17	010F  40				     inc ax
     18	0110  3D 0019				     cmp ax, 25d
     19	0113  72 F7				     jb	DrawBG
     20
     21	0115  B2 07				     mov dl, 07h		     ; white on	black
     22
     23	0117  B6 20				     mov dh, 32d		     ; ' '
     24
     25	0119  B8 0001				     mov ax, 1d
     26	011C  E8 0095				     call DrawVerLine
     27	011F  B8 004E				     mov ax, 78d
     28	0122  E8 008F				     call DrawVerLine
     29
     30	0125  B6 CD				     mov dh, 0cdh
     31
     32	0127  B8 0000				     mov ax, 0d
     33	012A  E8 0057				     call DrawHorLine
     34	012D  B8 0018				     mov ax, 24d
     35	0130  E8 0051				     call DrawHorLine
     36
     37	0133  B6 BA				     mov dh, 0bah
     38
     39	0135  B8 0000				     mov ax, 0d
     40	0138  E8 0079				     call DrawVerLine
     41	013B  B8 004F				     mov ax, 79d
     42	013E  E8 0073				     call DrawVerLine
     43
     44	0141  BB 0000				     mov bx, 0d
     45	0144  26: C6 07	C9			     mov byte ptr es:[bx], 0c9h	     ; upper-left corner
     46	0148  BB 009E				     mov bx, 158d
     47	014B  26: C6 07	BB			     mov byte ptr es:[bx], 0bbh	     ; upper-right corner
     48	014F  BB 0F00				     mov bx, 24d * 160d
     49	0152  26: C6 07	C8			     mov byte ptr es:[bx], 0c8h	     ; lower-left corner
     50	0156  BB 0F9E				     mov bx, 24d * 160d	+ 158d
     51	0159  26: C6 07	BC			     mov byte ptr es:[bx], 0bch	     ; lower-right corner
     52
     53	015D  BA 07BC				     mov dx, (12d * 80d	+ 30d) * 2d
     54	0160  BB 0000r				     mov bx, offset Message
     55
     56	0163  80 3F 00		     PrintMessage:   cmp byte ptr [bx],	0d
     57	0166  74 13				     je	Delay
Turbo Assembler	 Version 4.1	    02/17/20 09:09:30	    Page 2
03_vramf.asm



     58
     59	0168  8A 0F				     mov cl, [bx]		     ; char -> |cl|
     60	016A  8B C3				     mov ax, bx
     61	016C  8B DA				     mov bx, dx
     62
     63	016E  26: 88 0F				     mov es:[bx], cl		     ; |cl| -> VRAM
     64
     65	0171  8B D3				     mov dx, bx
     66	0173  8B D8				     mov bx, ax
     67
     68	0175  43				     inc bx			     ; next symbol
     69	0176  83 C2 02				     add dx, 2d			     ; next VRAM cell
     70	0179  EB E8				     jmp PrintMessage
     71
     72	017B  B4 00		     Delay:	     mov ah, 00h
     73	017D  CD 16				     int 16h			     ; wait keyboard action
     74
     75	017F  B8 4C00				     mov ax, 4c00h		     ; return 0
     76	0182  CD 21				     int 21h
     77
     78				     ;-----------------------------------------------------------------
     79				     ;	     Func draws	horizontal line	on the screen
     80				     ;	     |ax| <- distance from the top of the screen (0-24)
     81				     ;	     |dh| <- ascii code	of symbol
     82				     ;	     |dl| <- bg	color
     83				     ;-----------------------------------------------------------------
     84	0184  50		     DrawHorLine:    push ax
     85
     86	0185  8B D8				     mov bx, ax
     87	0187  D1 E3 D1 E3 D1 E3	D1+		     shl bx, 5d		     ; bx = 32 ax + 128	ax = 160 ax
     88	      E3 D1 E3
     89	0191  D1 E0 D1 E0 D1 E0	D1+		     shl ax, 7d
     90	      E0 D1 E0 D1 E0 D1	E0
     91	019F  03 D8				     add bx, ax
     92
     93	01A1  B8 0000				     mov ax, 00h	     ; now ax is the width counter
     94
     95	01A4  26: 88 37		     H_DrawSymbol:   mov es:[bx], dh	     ; symbol -> vram
     96	01A7  43				     inc bx
     97
     98	01A8  26: 88 17				     mov es:[bx], dl	     ; setting bg color
     99	01AB  43				     inc bx
    100
    101	01AC  40				     inc ax
    102	01AD  3D 0050				     cmp ax, 80d
    103	01B0  75 F2				     jne H_DrawSymbol
    104
    105	01B2  58				     pop ax
    106	01B3  C3				     ret
    107				     ;-----------------------------------------------------------------
    108				     ;#################################################################
    109				     ;-----------------------------------------------------------------
    110				     ;	     Function draws vertical line on the screen
    111				     ;	     |ax| <- distance from the left corner of the screen (0-79)
    112				     ;	     |dh| <- ascii code	of symbol
    113				     ;	     |dl| <- bg	color
    114				     ;-----------------------------------------------------------------
Turbo Assembler	 Version 4.1	    02/17/20 09:09:30	    Page 3
03_vramf.asm



    115	01B4  50		     DrawVerLine:    push ax
    116
    117	01B5  8B D8				     mov bx, ax
    118	01B7  D1 E3				     shl bx, 1d
    119
    120	01B9  B8 0000				     mov ax, 00h
    121
    122	01BC  26: 88 37		     V_DrawSymbol:   mov es:[bx], dh
    123	01BF  43				     inc bx
    124
    125	01C0  26: 88 17				     mov es:[bx], dl
    126	01C3  81 C3 009F			     add bx, 159d
    127
    128	01C7  40				     inc ax
    129	01C8  3D 0019				     cmp ax, 25d
    130	01CB  75 EF				     jne V_DrawSymbol
    131
    132	01CD  58				     pop ax
    133	01CE  C3				     ret
    134				     ;-----------------------------------------------------------------
    135
    136	01CF			     .data
    137
    138	0000  41 73 6D 20 69 73	20+  Message:	     db	'Asm is	very interesting!', 0d
    139	      76 65 72 79 20 69	6E+
    140	      74 65 72 65 73 74	69+
    141	      6E 67 21 00
    142
    143				     end	     Start
Turbo Assembler	 Version 4.1	    02/17/20 09:09:30	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/17/20"
??FILENAME			  Text	 "03_vramf"
??TIME				  Text	 "09:09:30"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _DATA
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 03_VRAMF
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
DELAY				  Near	 DGROUP:017B
DRAWBG				  Near	 DGROUP:010C
DRAWHORLINE			  Near	 DGROUP:0184
DRAWVERLINE			  Near	 DGROUP:01B4
H_DRAWSYMBOL			  Near	 DGROUP:01A4
MESSAGE				  Near	 DGROUP:0000
PRINTMESSAGE			  Near	 DGROUP:0163
START				  Near	 DGROUP:0100
VIDEOSEGMENT			  Number B800
V_DRAWSYMBOL			  Near	 DGROUP:01BC

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0019 Word	  Public  DATA
  _TEXT				  16  01CF Word	  Public  CODE
